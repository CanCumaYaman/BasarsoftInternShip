@{
    ViewData["Title"] = "Home Page";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Bing Maps</title>
    <link href="https://cdn.jsdelivr.net/npm/jspanel4@4.11.1/dist/jspanel.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.5.0/css/ol.css" type="text/css">
    <script src="https://cdn.polyfill.io/v3/polyfill.js?features=fetch,requestAnimationFrame,Element.prototype.classList,URL,TextDecoder"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.5.0/build/ol.js"></script>
    <style>
        .map {
            height: 400px;
            width: 100%;
        }

        .layer-select {
            margin-top: 10px;
            border: 1px solid black;
            padding: 7px;
        }

        .popover-body {
            min-width: 276px;
        }
    </style>



</head>
<body>
    <a href="javascript:ActiveKapi();">Kapı Ekle</a>
    <div id="map" class="map"></div>


    <!--
    <select id="layer-select" class="layer-select">

        <option value="AerialWithLabelsOnDemand" selected>Aerial with labels</option>

    </select>
        -->
    <form class="form-inline">
        <label for="type">Geometry type: &nbsp;</label>
        <select class="form-control mr-2 mb-2 mt-2" id="type">
            <option value="Point">Point</option>
            <option value="LineString">LineString</option>
            <option value="Polygon">Polygon</option>
            <option value="Circle">Circle</option>
            <option value="None">None</option>
        </select>
        <input class="form-control mr-2 mb-2 mt-2" type="button" value="Undo" id="undo">
    </form>
    <script src="https://cdn.jsdelivr.net/npm/jspanel4@4.11.1/dist/jspanel.js"></script>
  
    <script>
        $(window).on('load', function () {
            ListAllPoints();
        });


      
        var raster = new ol.layer.Tile({

            preload: Infinity,
            source: new ol.source.BingMaps({
                key: 'Av_kDzzEbj4a86y7tlCRPp3H5OtG1JiZXLANyJXnGzJGI5A57GYgBcHm7lCPtvmZ',
                imagerySet: 'AerialWithLabelsOnDemand',
                projection: 'EPSG:3857'

            })
        });

        var source = new ol.source.Vector({ wrapX: false });

        var vector = new ol.layer.Vector({
            source: source
        });

        var kapi_layer = new ol.layer.Vector({
            source: new ol.source.Vector()
        });
        var map = new ol.Map({
            layers: [raster, vector, kapi_layer],
            target: 'map',
            view: new ol.View({
                center: ol.proj.fromLonLat([34.9744, 39.0128]),
                zoom: 6,
                projection: "EPSG:3857"

            })

        });
        //buraya kadar olan kodların neden yazıldığını, ne işe yaradığını önceki yazımda anlatmıştım.
        var kapi;
        function addKapiInteraction() {
            kapi = new ol.interaction.Draw({
                source: source,
                type: 'Point'
            });

            map.addInteraction(kapi);
            kapi.setActive(false);

        }

        function ActiveKapi() {
            kapi.setActive(true);
        }

        addKapiInteraction();

        kapi.on('drawend', function (e) {
            //point atıldıktan sonra yapılacak işler bu scope de yer almalı
            var currentFeature = e.feature;

            var _coords = currentFeature.getGeometry().getCoordinates();
            kapi.setActive(false);

            jsPanel.create({
                id: "kapi_ekle_panel",
                theme: 'success',
                headerTitle: 'kapı ekle',
                position: 'center-top 0 58',
                contentSize: '300 250',
                content: 'No: <input id="kapi_no" type="text"/><br><br><br><button style="height:40px;width:60px" id="kapi_kaydet" class="btn btn-success">Ekle</button>',
                callback: function () {
                    this.content.style.padding = '20px';
                }
            });
            document.getElementById('kapi_kaydet').onclick = function () {

                var _no = $('#kapi_no').val();

                if (_no.length < 1) {

                    alert("Kapı Numarası Girmediniz");

                    return;
                }

                //kapının kordinatlarını x ve y değişkenlerine attım
                var _data = {
                    x: _coords[0].toString().replace('.', ','),
                    y: _coords[1].toString().replace('.', ','),
                    no: _no
                };
                $.ajax({
                    type: "POST",
                    url: "/Door/SavePoint",
                    dataType: 'json',
                    data: _data,
                    success: function (message) {
                        alert("Başarıyla Eklendi");

                        kapi.setActive(false);
                    },

                    error: function () {
                        alert("Hata Oluştu");
                    },
                    onbeforeclose: function () {
                        return onbeforeclose();
                    },
                });
            }
        });

        function ListAllPoints() {

            $.ajax({
                type: "GET",
                url: "/Door/List",
                dataType: 'json',
                success: function (response) {

                    var _features = [];

                    for (var i = 0; i < response.length; i++) {

                        //her bir pointin x,y koordinatlarını aldım.

                        var _point = response[i];
                        var _id = _point.Id
                        var _geo = new ol.geom.Point([_point.x, _point.y]);

                        var featurething = new ol.Feature({
                            name: "Door",
                            geometry: _geo,

                        });

                        featurething.setId(_id)

                        //feature oluşutup buna noktaları atadım ve style verdim

                        var _style = new ol.style.Style({
                            image: new ol.style.Circle({
                                fill: new ol.style.Fill({
                                    color: 'rgba(0,0,255,0.3)'
                                }),
                                stroke: new ol.style.Stroke({
                                    color: '#8000ff'
                                }),
                                radius: 10
                            }),
                        });

                        featurething.setStyle(_style);

                        _features.push(featurething);
                    }
                    //oluşturduğum style ı feature a set ettım ve featuring nesnemi de  boş olan _features listesine attım.
                    //layer ve source olayını daha önce vurgulamıstım yazdıgım ve elde ettıgım feature harita kaynağına (source) atılmazsa
                    //dataları map üstünde göremeyiz

                    var _pointSource = kapi_layer.getSource();

                    _pointSource.addFeatures(_features);
                },

                error: function () {
                    alert("upsss");
                },

            });
        };

    </script>


</body>
</html>




